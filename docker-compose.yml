version: "3"
services:
  mongo:
    image: tutum/mongodb:3.2
    restart: always
    environment:
      - AUTH=no
    ports:
      - "27017:27017"
      - "27018:27017"
    volumes:
      - ./mongodata:/data/db
  visits:
    build:
      context: ./visits
      dockerfile: Dockerfile
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - ./visits:/visits
    ports:
      - "3000:3000"
    depends_on:
      - mongo
    stdin_open: true
    tty: true
  postgres:
    image: postgres:11-alpine
    volumes:
      - ./postgresdata:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=pg_password
  contacts:
    build:
      context: ./contacts
      dockerfile: Dockerfile
    command: bash -c "rm -f tmp/pids/server.pid && bundle exec rails s -p 3000 -b '0.0.0.0'"
    volumes:
      - ./contacts:/contacts
    ports:
      - "3001:3000"
    environment:
      - DB_HOST=postgres
      - DB_USERNAME=postgres
      - DB_PASSWORD=pg_password
    depends_on:
      - postgres
    stdin_open: true
    tty: true
  kong:
    image: kong:2.1.4-alpine
    restart: always
    volumes:
      - ./kong:/usr/local/kong/declarative
    ports:
      - "8001:8001"
      - "8000:8000"
    environment:
      - KONG_DATABASE=off
      - KONG_DECLARATIVE_CONFIG=/usr/local/kong/declarative/kong.yml
      - KONG_PROXY_ACCESS_LOG=/dev/stdout
      - KONG_ADMIN_ACCESS_LOG=/dev/stdout
      - KONG_PROXY_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_ERROR_LOG=/dev/stderr
      - KONG_ADMIN_LISTEN=0.0.0.0:8001, 0.0.0.0:8444 ssl
    healthcheck:
      test: ["CMD", "curl", "-f", "http://kong:8001"]
      interval: 5s
      timeout: 2s
      retries: 15
